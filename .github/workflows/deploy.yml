name: Deploy build

on:
  workflow_dispatch:
  push:
    branches: [ develop, main ]

jobs:
  deploy-app:
    if: "! contains(github.event.head_commit.message, '[wip]')"
    name: Deploy Laravel (PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-20.04]
        php-versions: ['8.1']

    steps:
      - uses: actions/checkout@v2

      - name: Get npm cache directory
        id: npm-cache
        run: echo "::set-output name=dir::$(npm config get cache)"

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          # Use package.json for key, if package-lock.json is not committed.
          # key: ${{ runner.os }}-node-${{ hashFiles('**/package.json') }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: NPM install
        run: npm install
        env:
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
          PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
          PUSHER_HOST: ${{ secrets.PUSHER_HOST }}
          PUSHER_PORT: ${{ secrets.PUSHER_PORT }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, dom, fileinfo
          # optional
          coverage: xdebug

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Composer install
        run: |
              composer config "http-basic.nova.laravel.com" "${{ secrets.NOVA_USERNAME }}" "${{ secrets.NOVA_PASSWORD }}"
              composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Prepare the application
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
          php artisan key:generate
        env:
          PUSHER_APP_ID: ${{ secrets.PUSHER_APP_ID }}
          PUSHER_APP_KEY: ${{ secrets.PUSHER_APP_KEY }}
          PUSHER_APP_SECRET: ${{ secrets.PUSHER_APP_SECRET }}
          PUSHER_HOST: ${{ secrets.PUSHER_HOST }}
          PUSHER_PORT: ${{ secrets.PUSHER_PORT }}

      - name: Clear config
        run: php artisan config:clear

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Publish assets with Lasso
        run: php artisan lasso:publish --no-git
        env:
          LASSO_ENV: ${{ steps.extract_branch.outputs.branch }}
          LASSO_DO_SPACES_KEY: ${{ secrets.LASSO_DO_SPACES_KEY }}
          LASSO_DO_SPACES_SECRET: ${{ secrets.LASSO_DO_SPACES_SECRET }}
          LASSO_DO_SPACES_URL: ${{ secrets.LASSO_DO_SPACES_URL }}
          LASSO_DO_SPACES_ENDPOINT: ${{ secrets.LASSO_DO_SPACES_ENDPOINT }}
          LASSO_DO_SPACES_REGION: ${{ secrets.LASSO_DO_SPACES_REGION }}
          LASSO_DO_SPACES_BUCKET: ${{ secrets.LASSO_DO_SPACES_BUCKET }}

      - name: Trigger develop deployment
        if: ${{ steps.extract_branch.outputs.branch == 'develop' }}
        run: curl -X POST ${{ secrets.DEVELOP_WEBHOOK }}

      - name: Trigger production deployment
        if: ${{ steps.extract_branch.outputs.branch == 'main' }}
        run: curl -X POST ${{ secrets.PROD_WEBHOOK }}
